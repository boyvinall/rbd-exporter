name: CI

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  workflow_dispatch:
  pull_request:
  release:
    types:
      - created

permissions:
  contents: read # for checkout

# When a new commit gets pushed to a branch we cancel any running CI jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.5.2
        with:
          version: v1.64.5

  register-check:
    runs-on: ubuntu-latest
    permissions:
      contents: write       # to publish a GitHub release
      issues: write         # to comment on released issues
      pull-requests: write  # to comment on released pull requests
    steps:
      - name: Analyze commits
        id: semantic
        uses: docker://ghcr.io/codfish/semantic-release-action:v3.5.0@sha256:9000a96ed75c6d597992e84f523c544e5dc9868c076ad24a9e4932c287eafbe7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Careful with updating the conventionalcommits package as it has previously broken during major version updates
          # To verify it works, make a "feat!: test" commit locally and run semantic release to see if it picks it up
          # It needs to be compatible with the semantic-release version that the codfish action uses
          additional-packages: |
            [
              "conventional-changelog-conventionalcommits@7.0.2"
            ]
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.git-tag  }}

  build:
    runs-on: ubuntu-latest
    needs: register-check
    if: needs.register-check.outputs.new-release-published != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - name: Build
        run: make build

  test:
    runs-on: ubuntu-latest
    needs: register-check
    if: needs.register-check.outputs.new-release-published != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - name: Test
        run: make test
      - uses: actions/upload-artifact@v4
        with:
          name: coverage.html
          path: coverage.html

  release:
    runs-on: ubuntu-latest
    needs: register-check
    if: needs.register-check.outputs.new-release-published == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Release
        run: make release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TAG: ${{ needs.register-check.outputs.new-release-version }}
